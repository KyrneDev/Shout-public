<?php
namespace Kyrne\Shout\Api\Serializers; use Flarum\Api\Serializer\AbstractSerializer; use Flarum\Api\Serializer\BasicUserSerializer; use Kyrne\Shout\Message; class MessageSerializer extends AbstractSerializer { protected $type = 'messages'; protected function getDefaultAttributes($sp2a3d03) { if (!$sp2a3d03 instanceof Message) { throw new \InvalidArgumentException(get_class($this) . ' can only serialize instances of ' . Message::class); } return array('message' => (bool) (!$sp2a3d03->is_hidden) ? $sp2a3d03->message : '', 'userId' => $sp2a3d03->user_id, 'isHidden' => $sp2a3d03->is_hidden, 'createdAt' => $this->formatDate($sp2a3d03->created_at), 'conversationId' => $sp2a3d03->conversation_id); } protected function user($sp2a3d03) { return $this->hasOne($sp2a3d03, BasicUserSerializer::class); } }