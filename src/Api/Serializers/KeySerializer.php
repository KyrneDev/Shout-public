<?php
namespace Kyrne\Shout\Api\Serializers; use Flarum\Api\Serializer\AbstractSerializer; use Flarum\Api\Serializer\BasicUserSerializer; use Kyrne\Shout\Encryption; class KeySerializer extends AbstractSerializer { protected $type = 'encryption_keys'; protected function getDefaultAttributes($sp953fd1) { if (!$sp953fd1 instanceof Encryption) { throw new \InvalidArgumentException(get_class($this) . ' can only serialize instances of ' . Encryption::class); } return array('bundle' => $sp953fd1->bundle_proto, 'identityKey' => $sp953fd1->identity_key, 'prekey' => $sp953fd1->prekey, 'index' => $sp953fd1->prekey_index, 'prekeysExhausted' => (bool) $sp953fd1->prekeys_exhausted); } protected function user($sp953fd1) { return $this->hasOne($sp953fd1, BasicUserSerializer::class); } }