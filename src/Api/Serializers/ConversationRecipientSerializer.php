<?php
namespace Kyrne\Shout\Api\Serializers; use Flarum\Api\Serializer\AbstractSerializer; use Flarum\Api\Serializer\BasicUserSerializer; use Kyrne\Shout\ConversationUser; class ConversationRecipientSerializer extends AbstractSerializer { protected $type = 'conversation_users'; protected function getDefaultAttributes($spd1b676) { if (!$spd1b676 instanceof ConversationUser) { throw new \InvalidArgumentException(get_class($this) . ' can only serialize instances of ' . ConversationUser::class); } return array('userId' => $spd1b676->user_id, 'conversationId' => $spd1b676->conversation_id, 'cipher' => $spd1b676->cipher); } public function user($spd1b676) { return $this->hasOne($spd1b676, BasicUserSerializer::class); } public function conversation($spd1b676) { return $this->hasOne($spd1b676, ConversationSerializer::class); } }