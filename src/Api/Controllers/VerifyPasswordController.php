<?php
namespace Kyrne\Shout\Api\Controllers; use Flarum\Api\Controller\AbstractShowController; use Flarum\Api\Serializer\BasicUserSerializer; use Flarum\Settings\SettingsRepositoryInterface; use Flarum\User\Exception\PermissionDeniedException; use Kyrne\Shout\Encryption; use Psr\Http\Message\ServerRequestInterface; use Tobscure\JsonApi\Document; use Illuminate\Contracts\Hashing\Hasher; class VerifyPasswordController extends AbstractShowController { public $serializer = BasicUserSerializer::class; protected function data(ServerRequestInterface $sp00f8d1, Document $speb2504) { $sp63f786 = $sp00f8d1->getAttribute('actor'); $sp369360 = $sp00f8d1->getParsedBody(); if ((bool) app(SettingsRepositoryInterface::class)->get('kyrne-shout.set_own_password')) { $sp5b29cf = Encryption::where('user_id', $sp63f786->id)->first(); if ($sp5b29cf) { if (app(Hasher::class)->check($sp369360['password'], $sp5b29cf->key)) { return $sp63f786; } else { throw new PermissionDeniedException(); } } } else { if (!$sp63f786->checkPassword($sp369360['password'])) { throw new PermissionDeniedException(); } else { return $sp63f786; } } } }