<?php
namespace Kyrne\Shout\Api\Controllers; use Flarum\Api\Controller\AbstractListController; use Kyrne\Shout\Api\Serializers\MessageSerializer; use Tobscure\JsonApi\Document; use Flarum\User\Exception\PermissionDeniedException; use Illuminate\Support\Arr; use Kyrne\Shout\Conversation; use Kyrne\Shout\Message; use Psr\Http\Message\ServerRequestInterface; class ListMessagesController extends AbstractListController { public $serializer = MessageSerializer::class; public $include = array('user'); protected function data(ServerRequestInterface $spc1c877, Document $spb8026c) { $sp71a176 = Arr::get($spc1c877->getQueryParams(), 'id'); $spd4bab0 = $spc1c877->getAttribute('actor'); $sp8e0f71 = $this->extractLimit($spc1c877); $sp9450d9 = $spc1c877->getQueryParams()['offset']; $sp12718f = Conversation::find($sp71a176); if (!$sp12718f->recipients()->where('user_id', $spd4bab0->id)->get()) { throw new PermissionDeniedException(); } $spb699ef = Message::where('conversation_id', $sp71a176)->orderBy('created_at', 'desc')->skip($sp9450d9)->take($sp8e0f71)->get(); $spd73b45 = $spd4bab0->id; foreach ($spb699ef as $sp2a3d03) { $sp2a3d03->message = json_decode($sp2a3d03->message)->{$spd73b45}; } return $spb699ef; } }