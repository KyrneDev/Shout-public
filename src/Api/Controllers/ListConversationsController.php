<?php
namespace Kyrne\Shout\Api\Controllers; use Flarum\Api\Controller\AbstractListController; use Kyrne\Shout\Api\Serializers\ConversationSerializer; use Kyrne\Shout\Conversation; use Psr\Http\Message\ServerRequestInterface; use Tobscure\JsonApi\Document; class ListConversationsController extends AbstractListController { public $serializer = ConversationSerializer::class; public $include = array('recipients', 'recipients.user'); public $limit = 12; public $maxLimit = 12; protected function data(ServerRequestInterface $spc1c877, Document $spb8026c) { $spd4bab0 = $spc1c877->getAttribute('actor'); $sp8e0f71 = $this->extractLimit($spc1c877); $sp9450d9 = array_key_exists('offset', $spc1c877->getQueryParams()) ? $spc1c877->getQueryParams()['offset'] : 0; $sp534d22 = Conversation::whereHas('recipients', function ($sp1fcaf3) use($spd4bab0) { $sp1fcaf3->where('user_id', $spd4bab0->id); })->orderBy('updated_at', 'desc')->skip($sp9450d9)->take($sp8e0f71)->get(); foreach ($sp534d22 as $sp12718f) { foreach ($sp12718f->recipients as $spef11b7) { if ($spef11b7->user_id != $spd4bab0->id) { $spef11b7->cipher = ''; } } } return $sp534d22; } }