<?php
namespace Kyrne\Shout\Api\Controllers; use Flarum\Api\Controller\AbstractShowController; use Flarum\User\Exception\PermissionDeniedException; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Kyrne\Shout\Api\Serializers\ConversationSerializer; use Kyrne\Shout\Conversation; use Kyrne\Shout\Message; use Psr\Http\Message\ServerRequestInterface; use Tobscure\JsonApi\Document; class ShowConversationController extends AbstractShowController { public $serializer = ConversationSerializer::class; public $include = array('messages', 'recipients', 'recipients.user'); protected function data(ServerRequestInterface $spc1c877, Document $spb8026c) { $sp71a176 = Arr::get($spc1c877->getQueryParams(), 'id'); $spd4bab0 = $spc1c877->getAttribute('actor'); $spef57d9 = $this->extractInclude($spc1c877); $sp12718f = Conversation::findOrFail($sp71a176); if (!$sp12718f->recipients()->where('user_id', $spd4bab0->id)->get()) { throw new PermissionDeniedException(); } if (in_array('messages', $spef57d9)) { $spe1d9df = $this->sp9b9855($spef57d9); $this->spa848f5($sp12718f, $spc1c877, $spe1d9df); } $sp12718f->load(array_filter($spef57d9, function ($sp28fe7b) { return !Str::startsWith($sp28fe7b, 'messages'); })); return $sp12718f; } private function spa848f5(Conversation $sp12718f, ServerRequestInterface $spc1c877, array $spef57d9) { $sp8e0f71 = $this->extractLimit($spc1c877); $sp9450d9 = $this->spe3c8d2($spc1c877, $sp12718f, $sp8e0f71); $spc03d10 = $this->sp8f06bd($sp12718f); $spefae25 = $this->sp73879f($sp12718f, $sp9450d9, $sp8e0f71, $spef57d9); array_splice($spc03d10, $sp9450d9, $sp8e0f71, $spefae25); $sp12718f->setRelation('messages', $spc03d10); } private function sp8f06bd(Conversation $sp12718f) { return $sp12718f->messages()->latest()->pluck('id')->all(); } private function sp9b9855(array $spef57d9) { $sp9628c6 = strlen($sp3ba838 = 'posts.'); $sp63cddd = array(); foreach ($spef57d9 as $sp28fe7b) { if (substr($sp28fe7b, 0, $sp9628c6) === $sp3ba838) { $sp63cddd[] = substr($sp28fe7b, $sp9628c6); } } return $sp63cddd; } private function spe3c8d2(ServerRequestInterface $spc1c877, Conversation $sp12718f, $sp8e0f71) { $sp91a0b2 = $spc1c877->getQueryParams(); $spd4bab0 = $spc1c877->getAttribute('actor'); if (($sp44265d = Arr::get($sp91a0b2, 'page.near')) > 1) { $sp9450d9 = message::getIndexForNumber($sp12718f->id, $sp44265d, $spd4bab0); $sp9450d9 = max(0, $sp9450d9 - $sp8e0f71 / 2); } else { $sp9450d9 = $this->extractOffset($spc1c877); } return $sp9450d9; } private function sp73879f($sp12718f, $sp9450d9, $sp8e0f71, array $spef57d9) { $sp2653e3 = $sp12718f->messages(); $sp2653e3->latest()->skip($sp9450d9)->take($sp8e0f71)->with($spef57d9); $spb699ef = $sp2653e3->get()->all(); foreach ($spb699ef as $sp2a3d03) { $sp2a3d03->conversation = $sp12718f; } return $spb699ef; } }