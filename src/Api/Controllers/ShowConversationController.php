<?php
namespace Kyrne\Shout\Api\Controllers; use Flarum\Api\Controller\AbstractShowController; use Flarum\User\Exception\PermissionDeniedException; use Illuminate\Support\Arr; use Illuminate\Support\Str; use Kyrne\Shout\Api\Serializers\ConversationSerializer; use Kyrne\Shout\Conversation; use Kyrne\Shout\Message; use Psr\Http\Message\ServerRequestInterface; use Tobscure\JsonApi\Document; class ShowConversationController extends AbstractShowController { public $serializer = ConversationSerializer::class; public $include = array('messages', 'recipients', 'recipients.user'); protected function data(ServerRequestInterface $sp00f8d1, Document $speb2504) { $sp046eb0 = Arr::get($sp00f8d1->getQueryParams(), 'id'); $sp63f786 = $sp00f8d1->getAttribute('actor'); $sp077def = $this->extractInclude($sp00f8d1); $spad5e71 = Conversation::findOrFail($sp046eb0); if (!$spad5e71->recipients()->where('user_id', $sp63f786->id)->get()) { throw new PermissionDeniedException(); } if (in_array('messages', $sp077def)) { $sp535980 = $this->speb9cb7($sp077def); $this->sp5fbd26($spad5e71, $sp00f8d1, $sp535980); } $spad5e71->load(array_filter($sp077def, function ($sp83a041) { return !Str::startsWith($sp83a041, 'messages'); })); return $spad5e71; } private function sp5fbd26(Conversation $spad5e71, ServerRequestInterface $sp00f8d1, array $sp077def) { $sp76da0a = $this->extractLimit($sp00f8d1); $sp0c0233 = $this->sp94dd6b($sp00f8d1, $spad5e71, $sp76da0a); $sp4c199c = $this->sp3e5f73($spad5e71); $sp78a22c = $this->sp4472ad($spad5e71, $sp0c0233, $sp76da0a, $sp077def); array_splice($sp4c199c, $sp0c0233, $sp76da0a, $sp78a22c); $spad5e71->setRelation('messages', $sp4c199c); } private function sp3e5f73(Conversation $spad5e71) { return $spad5e71->messages()->latest()->pluck('id')->all(); } private function speb9cb7(array $sp077def) { $spe23da4 = strlen($spb9ee3f = 'posts.'); $sp626653 = array(); foreach ($sp077def as $sp83a041) { if (substr($sp83a041, 0, $spe23da4) === $spb9ee3f) { $sp626653[] = substr($sp83a041, $spe23da4); } } return $sp626653; } private function sp94dd6b(ServerRequestInterface $sp00f8d1, Conversation $spad5e71, $sp76da0a) { $spe9635d = $sp00f8d1->getQueryParams(); $sp63f786 = $sp00f8d1->getAttribute('actor'); if (($spa25a48 = Arr::get($spe9635d, 'page.near')) > 1) { $sp0c0233 = message::getIndexForNumber($spad5e71->id, $spa25a48, $sp63f786); $sp0c0233 = max(0, $sp0c0233 - $sp76da0a / 2); } else { $sp0c0233 = $this->extractOffset($sp00f8d1); } return $sp0c0233; } private function sp4472ad($spad5e71, $sp0c0233, $sp76da0a, array $sp077def) { $spf7b294 = $spad5e71->messages(); $spf7b294->latest()->skip($sp0c0233)->take($sp76da0a)->with($sp077def); $spc2223a = $spf7b294->get()->all(); foreach ($spc2223a as $sp8afed4) { $sp8afed4->conversation = $spad5e71; } return $spc2223a; } }