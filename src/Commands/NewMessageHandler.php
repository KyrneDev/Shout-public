<?php
namespace Kyrne\Shout\Commands; use Flarum\User\Exception\PermissionDeniedException; use Flarum\User\User; use Kyrne\Shout\Conversation; use Kyrne\Shout\ConversationUser; use Kyrne\Shout\Message; use Pusher\Pusher; class NewMessageHandler { public function handle(NewMessage $sp07d2ef) { $sp63f786 = $sp07d2ef->actor; $sp369360 = $sp07d2ef->data; $sp046eb0 = $sp07d2ef->conversationId; if ($sp046eb0) { $spad5e71 = Conversation::find($sp046eb0); } else { $spad5e71 = Conversation::find($sp369360['attributes']['conversationId']); } if (!$spad5e71->recipients()->where('user_id', $sp63f786->id)->get()) { throw new PermissionDeniedException(); } $sp8afed4 = Message::newMessage(json_encode($sp369360['attributes']['messageContents']), $sp63f786->id, $spad5e71->id); $sp8afed4->save(); $spad5e71->increment('total_messages'); ConversationUser::where(array(array('user_id', '=', $sp63f786->id), array('conversation_id', '=', $spad5e71->id)))->update(array('cipher' => $sp369360['attributes']['cipher'])); foreach (ConversationUser::where('conversation_id', $spad5e71->id)->pluck('user_id')->all() as $sp2f80ef) { if (intval($sp2f80ef) !== intval($sp63f786->id)) { User::find($sp2f80ef)->increment('unread_messages'); $this->pushNewMessage($sp2f80ef, $sp8afed4, $spad5e71->id); } } $sp9a6e86 = $sp63f786->id; $sp8afed4->message = json_decode($sp8afed4->message)->{$sp9a6e86}; return $sp8afed4; } public function pushNewMessage($sp2f80ef, $sp8afed4, $sp046eb0) { if (app()->bound(Pusher::class)) { app(Pusher::class)->trigger('private-user' . $sp2f80ef, 'newMessage', array('id' => $sp8afed4->id, 'message' => json_decode($sp8afed4->message)->{$sp2f80ef}, 'createdAt' => (new \DateTime($sp8afed4->created_at))->format(\DateTime::RFC3339), 'conversationId' => $sp046eb0)); } } }