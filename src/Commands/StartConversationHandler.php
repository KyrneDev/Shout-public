<?php
namespace Kyrne\Shout\Commands; use Flarum\User\AssertPermissionTrait; use Illuminate\Contracts\Bus\Dispatcher as BusDispatcher; use InvalidArgumentException; use Kyrne\Shout\Conversation; use Kyrne\Shout\ConversationUser; use Kyrne\Shout\Encryption; class StartConversationHandler { protected $bus; public function __construct(BusDispatcher $spe8efae) { $this->bus = $spe8efae; } public function handle(StartConversation $sp6a6b12) { $spd4bab0 = $sp6a6b12->actor; $sp2b7469 = $sp6a6b12->data; $spd4bab0->assertCan('startConversation'); if (intval($sp2b7469['attributes']['recipient']) === intval($spd4bab0->id)) { throw new InvalidArgumentException(); } $sp9649c6 = ConversationUser::where('user_id', $spd4bab0->id)->pluck('conversation_id')->all(); $sp670545 = null; foreach ($sp9649c6 as $spd73b45) { $sp12718f = conversation::find($spd73b45); if (in_array($sp2b7469['attributes']['recipient'], $sp12718f->recipients()->pluck('user_id')->all())) { $sp670545 = $sp12718f; break; } } if ($sp670545) { $sp670545->notNew = true; return $sp670545; } $sp12718f = Conversation::start(); $sp12718f->save(); try { $this->bus->dispatch(new NewMessage($spd4bab0, $sp2b7469, $sp12718f->id)); } catch (\Exception $sp783d89) { $sp12718f->delete; throw $sp783d89; } foreach (array_merge(array($spd4bab0->id), (array) $sp2b7469['attributes']['recipient']) as $sp3409ee) { $spef11b7 = new ConversationUser(); $spef11b7->conversation_id = $sp12718f->id; $spef11b7->user_id = $sp3409ee; if (intval($sp3409ee) === intval($spd4bab0->id)) { $spef11b7->cipher = $sp2b7469['attributes']['cipher']; } $spef11b7->save(); } $sp953fd1 = Encryption::where('user_id', $sp2b7469['attributes']['recipient'])->first(); $sp953fd1->increment('prekey_index'); if ($sp953fd1->prekey_index > 47) { $sp953fd1->prekeys_exhausted = true; } $sp953fd1->save(); return $sp12718f; } }