<?php
namespace Kyrne\Shout; use Carbon\Carbon; use Flarum\Database\AbstractModel; use Flarum\User\User; class Encryption extends AbstractModel { protected $table = 'user_encryption_keys'; public $timestamps = true; protected $dates = array('created_at', 'updated_at'); protected $hidden = array('private_key'); public static function populate($sp63f786, $spd17f42, $sp75722f, $sp2c476a, $sp087b35) { $spaaa5dd = new static(); $spaaa5dd->user_id = $sp63f786->id; $spaaa5dd->identity_key = $spd17f42; $spaaa5dd->prekeys = json_encode($sp75722f); $spaaa5dd->bundle_proto = $sp2c476a; $spaaa5dd->key = $sp087b35; $spaaa5dd->created_at = Carbon::now(); return $spaaa5dd; } public static function findOrFail($sp9a6e86) { $spf7b294 = static::where('id', $sp9a6e86); return $spf7b294->firstOrFail(); } public function user() { return $this->belongsTo(User::class, 'user_id'); } }