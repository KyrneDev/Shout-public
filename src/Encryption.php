<?php
namespace Kyrne\Shout; use Carbon\Carbon; use Flarum\Database\AbstractModel; use Flarum\User\User; class Encryption extends AbstractModel { protected $table = 'user_encryption_keys'; public $timestamps = true; protected $dates = array('created_at', 'updated_at'); protected $hidden = array('private_key'); public static function populate($spd4bab0, $spb0e8f6, $spa4250f, $sp658aba, $sp870272) { $sp953fd1 = new static(); $sp953fd1->user_id = $spd4bab0->id; $sp953fd1->identity_key = $spb0e8f6; $sp953fd1->prekeys = json_encode($spa4250f); $sp953fd1->bundle_proto = $sp658aba; $sp953fd1->key = $sp870272; $sp953fd1->created_at = Carbon::now(); return $sp953fd1; } public static function findOrFail($spd73b45) { $sp2653e3 = static::where('id', $spd73b45); return $sp2653e3->firstOrFail(); } public function user() { return $this->belongsTo(User::class, 'user_id'); } }