<?php
namespace Kyrne\Shout; use Carbon\Carbon; use Flarum\Database\AbstractModel; use Flarum\User\User; use Kyrne\Shout\Conversation; use Ramsey\Uuid\Uuid; class Message extends AbstractModel { protected $table = 'messages'; public $timestamps = true; public $incrementing = false; protected $keyType = 'string'; protected $appends = array('human_time'); protected $dates = array('created_at'); public $fillable = array('message', 'is_seen', 'is_hidden', 'user_id', 'conversation_id'); public static function newMessage($spd59ffe, $sp8e43de, $sp046eb0) { $sp8afed4 = new static(); $sp8afed4->id = Uuid::uuid4()->toString(); $sp8afed4->message = $spd59ffe; $sp8afed4->user_id = $sp8e43de; $sp8afed4->created_at = Carbon::now(); $sp8afed4->conversation_id = $sp046eb0; return $sp8afed4; } public static function findOrFail($sp9a6e86) { $spf7b294 = static::where('id', $sp9a6e86); return $spf7b294->firstOrFail(); } public function conversation() { return $this->belongsTo(Conversation::class); } public function user() { return $this->belongsTo(User::class); } }