<?php
namespace Kyrne\Shout; use Carbon\Carbon; use Flarum\Database\AbstractModel; use Flarum\User\User; use Kyrne\Shout\Conversation; class Message extends AbstractModel { protected $table = 'messages'; public $timestamps = true; protected $appends = array('human_time'); protected $dates = array('created_at'); public $fillable = array('message', 'is_seen', 'is_hidden', 'user_id', 'conversation_id'); public static function newMessage($sp37c7d3, $sp546771, $sp71a176) { $sp2a3d03 = new static(); $sp2a3d03->message = $sp37c7d3; $sp2a3d03->user_id = $sp546771; $sp2a3d03->created_at = Carbon::now(); $sp2a3d03->conversation_id = $sp71a176; return $sp2a3d03; } public static function findOrFail($spd73b45) { $sp2653e3 = static::where('id', $spd73b45); return $sp2653e3->firstOrFail(); } public function conversation() { return $this->belongsTo(Conversation::class); } public function user() { return $this->belongsTo(User::class); } }