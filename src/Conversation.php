<?php
namespace Kyrne\Shout; use Carbon\Carbon; use Flarum\Database\AbstractModel; use Flarum\User\User; class Conversation extends AbstractModel { protected $table = 'conversations'; public $timestamps = true; public $fillable = array('user_one_id', 'user_two_id', 'status'); protected $dates = array('created_at', 'updated_at'); public static function start() { $sp12718f = new static(); $sp12718f->created_at = Carbon::now(); return $sp12718f; } public static function findOrFail($spd73b45) { $sp2653e3 = static::where('id', $spd73b45); return $sp2653e3->firstOrFail(); } public function messages() { return $this->hasMany(Message::class, 'conversation_id')->with('user'); } public function recipients() { return $this->hasMany(ConversationUser::class, 'conversation_id')->with('user'); } }